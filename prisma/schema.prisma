generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model pendis {
  id                   Int       @id @default(autoincrement())
  status               status
  no_register          String    @unique(map: "dataPendis_noRegister_key")
  tgl_Register         DateTime  @db.Date
  nama_pemohon         String
  nik_pemohon          String    @db.VarChar(16)
  alamat_pemohon       String
  kecamatan            String
  desa                 String
  asnaf                String
  program              String
  jml_penerima_manfaat Int
  besar_permohonan     Int
  besar_realisasi      Int
  tgl_realisasi        DateTime? @db.Date
  ket_disposisi        String    @db.VarChar(255)
  uploadData           String
  createdAt            DateTime  @default(now())
  updatedAt            DateTime? @db.Date
}

model account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              user    @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Account_userId_fkey")

  @@unique([provider, providerAccountId], map: "Account_provider_providerAccountId_key")
  @@index([userId], map: "Account_userId_fkey")
}

model session {
  id           String   @id
  sessionToken String   @unique(map: "Session_sessionToken_key")
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Session_userId_fkey")

  @@index([userId], map: "Session_userId_fkey")
}

model user {
  id       String    @id @default(uuid())
  name     String?
  username String?   @unique(map: "User_username_key")
  password String?   @db.VarChar(999)
  image    String?   @db.VarChar(999)
  divisi   String?
  role     String?
  account  account[]
  session  session[]
}

model verificationtoken {
  identifier String
  token      String   @unique(map: "VerificationToken_token_key")
  expires    DateTime @db.Date

  @@unique([identifier, token], map: "VerificationToken_identifier_token_key")
}

enum user_divisi {
  Pengumpulan
  Pendistribusian
  Pendayagunaan
  PKP
  Umum
  SDM
}

enum user_role {
  Admin
  User
  Approval
}

enum status {
  Diproses
  Selesai
  Ditolak
}
